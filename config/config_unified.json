{
    "_comment": "Unified VAE Configuration with Multiple Loss Function Presets",
    "_documentation": "This file contains all VAE training configurations in one place for easy management",
    
    "base_config": {
        "embedding_size": 512,
        "num_channels": 128,
        "beta": 1.0,
        "input_img_size": 64,
        "batch_size": 128,
        "lr": 0.0001,
        "max_epoch": 100,
        "log_dir": "logs",
        "dataset_dir": "celeba-dataset",
        "model_save_path": "model_weights/",
        "dataset_subset": null
    },
    
    "loss_presets": {
        "_comment": "Predefined loss function configurations for different use cases",
        
        "mse_only": {
            "_description": "Pure MSE loss - fastest training but blurriest results",
            "_use_case": "Quick testing, baseline comparison",
            "_pros": "Stable, fast training",
            "_cons": "Very blurry images",
            "use_mse": true,
            "use_l1": false,
            "use_perceptual_loss": false,
            "use_lpips": false,
            "mse_weight": 1.0,
            "l1_weight": 0.0,
            "perceptual_weight": 0.0,
            "lpips_weight": 0.0
        },
        
        "mse_l1": {
            "_description": "MSE + L1 + Generation loss - good balance of quality, speed, and diversity",
            "_use_case": "Recommended for most users, good starting point with diversity",
            "_pros": "Sharper images, stable training, good diversity",
            "_cons": "Still some blurriness",
            "use_mse": true,
            "use_l1": true,
            "use_perceptual_loss": false,
            "use_lpips": false,
            "mse_weight": 0.8,
            "l1_weight": 0.15,
            "generation_weight": 0.05,
            "perceptual_weight": 0.0,
            "lpips_weight": 0.0
        },
        
        "mse_l1_scheduled": {
            "_description": "MSE + L1 + Generation loss with warmup scheduling - prevents early domination",
            "_use_case": "Stable training with gradual introduction of generation quality",
            "_pros": "Prevents generation loss domination, stable training, good diversity",
            "_cons": "More complex configuration",
            "use_mse": true,
            "use_l1": true,
            "use_perceptual_loss": false,
            "use_lpips": false,
            "mse_weight": 0.8,
            "l1_weight": 0.15,
            "generation_weight": 0.05,
            "perceptual_weight": 0.0,
            "lpips_weight": 0.0,
            "generation_schedule": true,
            "generation_start": 0.0,
            "generation_end": 0.05,
            "generation_warmup_epochs": 20
        },
        
        "perceptual": {
            "_description": "MSE + L1 + Perceptual loss - high quality with realistic textures",
            "_use_case": "High quality generation, better textures",
            "_pros": "Realistic textures, better high-level features, stable training",
            "_cons": "Slower training, more memory usage",
            "use_mse": true,
            "use_l1": true,
            "use_perceptual_loss": true,
            "use_lpips": false,
            "mse_weight": 0.4,
            "l1_weight": 0.2,
            "perceptual_weight": 0.4,
            "lpips_weight": 0.0,
            "perceptual_schedule": true,
            "perceptual_start": 0.0,
            "perceptual_end": 0.4,
            "perceptual_warmup_epochs": 20
        },
        
        "lpips": {
            "_description": "MSE + L1 + LPIPS loss - best perceptual quality",
            "_use_case": "Best possible quality, research applications",
            "_pros": "Best perceptual similarity, most realistic",
            "_cons": "Slowest training, requires LPIPS dependency",
            "use_mse": true,
            "use_l1": true,
            "use_perceptual_loss": false,
            "use_lpips": true,
            "mse_weight": 0.6,
            "l1_weight": 0.2,
            "perceptual_weight": 0.0,
            "lpips_weight": 0.2
        },
        
        "custom_balanced": {
            "_description": "Custom balanced configuration - moderate quality and speed",
            "_use_case": "Custom tuning, specific requirements",
            "_pros": "Balanced approach",
            "_cons": "May need fine-tuning",
            "use_mse": true,
            "use_l1": true,
            "use_perceptual_loss": false,
            "use_lpips": false,
            "mse_weight": 0.7,
            "l1_weight": 0.3,
            "perceptual_weight": 0.0,
            "lpips_weight": 0.0
        },
        
        "high_quality": {
            "_description": "High quality configuration - best balance of all losses",
            "_use_case": "Production use, best quality without LPIPS",
            "_pros": "High quality, good textures, sharp details, stable training",
            "_cons": "Slower than basic configs",
            "use_mse": true,
            "use_l1": true,
            "use_perceptual_loss": true,
            "use_lpips": false,
            "mse_weight": 1.0,
            "l1_weight": 0.2,
            "perceptual_weight": 0.01,
            "generation_weight": 0.001,
            "lpips_weight": 0.0,
            "perceptual_schedule": true,
            "perceptual_start": 0.0,
            "perceptual_end": 0.02,
            "perceptual_warmup_epochs": 45
        },
        
        "high_diversity": {
            "_description": "High diversity configuration - emphasizes generation quality and diversity",
            "_use_case": "Experiments requiring high variation, creative generation",
            "_pros": "High diversity, sharp edges, good contrast, stable training",
            "_cons": "May sacrifice some reconstruction accuracy",
            "use_mse": true,
            "use_l1": true,
            "use_perceptual_loss": true,
            "use_lpips": false,
            "mse_weight": 0.2,
            "l1_weight": 0.1,
            "perceptual_weight": 0.4,
            "generation_weight": 0.3,
            "lpips_weight": 0.0,
            "perceptual_schedule": true,
            "perceptual_start": 0.0,
            "perceptual_end": 0.4,
            "perceptual_warmup_epochs": 25
        },
        
        "ultra_high_quality_loss": {
            "_description": "Ultra high quality loss - best possible perceptual quality",
            "_use_case": "Research, best possible quality, production",
            "_pros": "Best perceptual quality, realistic textures, sharp details, stable training",
            "_cons": "Slowest training, highest memory usage",
            "use_mse": true,
            "use_l1": true,
            "use_perceptual_loss": true,
            "use_lpips": true,
            "mse_weight": 0.3,
            "l1_weight": 0.2,
            "perceptual_weight": 0.3,
            "lpips_weight": 0.2,
            "perceptual_schedule": true,
            "perceptual_start": 0.0,
            "perceptual_end": 0.3,
            "perceptual_warmup_epochs": 35
        },
        
        "full_retrain_optimal": {
            "_description": "Optimal configuration for full retraining from scratch",
            "_use_case": "Fresh training with balanced loss weights to prevent posterior collapse",
            "_pros": "Prevents blurry images, good diversity, sharp details, stable training",
            "_cons": "Requires full retraining",
            "use_mse": true,
            "use_l1": true,
            "use_perceptual_loss": true,
            "use_lpips": false,
            "mse_weight": 0.15,
            "l1_weight": 0.05,
            "perceptual_weight": 0.8,
            "lpips_weight": 0.0,
            "perceptual_schedule": true,
            "perceptual_start": 0.0,
            "perceptual_end": 0.8,
            "perceptual_warmup_epochs": 30
        },
        
        "perceptual_scheduled": {
            "_description": "Perceptual loss with warmup scheduling - prevents early perceptual domination",
            "_use_case": "High quality training with controlled perceptual loss introduction",
            "_pros": "Prevents posterior collapse, stable training, high quality results",
            "_cons": "More complex configuration, requires tuning",
            "use_mse": true,
            "use_l1": true,
            "use_perceptual_loss": true,
            "use_lpips": false,
            "mse_weight": 0.3,
            "l1_weight": 0.1,
            "perceptual_weight": 0.6,
            "lpips_weight": 0.0,
            "perceptual_schedule": true,
            "perceptual_start": 0.0,
            "perceptual_end": 0.6,
            "perceptual_warmup_epochs": 20
        },
        
        "balanced_scheduled": {
            "_description": "Balanced loss with both beta and perceptual scheduling",
            "_use_case": "Optimal training with both KL and perceptual loss control",
            "_pros": "Prevents both posterior collapse and perceptual domination",
            "_cons": "Most complex configuration",
            "use_mse": true,
            "use_l1": true,
            "use_perceptual_loss": true,
            "use_lpips": false,
            "mse_weight": 0.4,
            "l1_weight": 0.2,
            "perceptual_weight": 0.2,
            "lpips_weight": 0.0,
            "perceptual_schedule": true,
            "perceptual_start": 0.0,
            "perceptual_end": 0.2,
            "perceptual_warmup_epochs": 30
        },
        
        "conservative_high_quality": {
            "_description": "Conservative high quality - prevents perceptual domination",
            "_use_case": "Fixes posterior collapse and perceptual domination issues",
            "_pros": "Very stable training, prevents perceptual domination, good reconstruction",
            "_cons": "May be slower to achieve high perceptual quality",
            "use_mse": true,
            "use_l1": true,
            "use_perceptual_loss": true,
            "use_lpips": false,
            "mse_weight": 0.5,
            "l1_weight": 0.3,
            "perceptual_weight": 0.15,
            "generation_weight": 0.05,
            "lpips_weight": 0.0,
            "perceptual_schedule": true,
            "perceptual_start": 0.0,
            "perceptual_end": 0.15,
            "perceptual_warmup_epochs": 35
        }
    },
    
    "training_presets": {
        "_comment": "Different training configurations for various scenarios",
        
        "quick_test": {
            "_description": "Quick testing configuration - 1 epoch, small batch",
            "_use_case": "Quick validation, debugging",
            "max_epoch": 1,
            "batch_size": 64,
            "lr": 0.001,
            "beta_schedule": true,
            "beta_start": 0.0,
            "beta_end": 0.1
        },
        
        "fast_training": {
            "_description": "Fast training - 20 epochs, larger batch",
            "_use_case": "Quick results, limited time",
            "max_epoch": 20,
            "batch_size": 256,
            "lr": 0.0005,
            "beta_schedule": true,
            "beta_start": 0.0,
            "beta_end": 0.1
        },
        
        "mse_priority_training": {
            "_description": "MSE-priority training - emphasizes reconstruction early, balanced later",
            "_use_case": "Good reconstruction first, then balanced objectives",
            "_pros": "Strong reconstruction foundation, prevents KL domination, balanced training",
            "_cons": "More complex scheduling",
            "max_epoch": 30,
            "batch_size": 128,
            "lr": 0.001,
            "beta_schedule": true,
            "beta_start": 0.0,
            "beta_end": 0.3,
            "beta_warmup_epochs": 8,
            "perceptual_schedule": true,
            "perceptual_start": 0.0,
            "perceptual_end": 0.1,
            "perceptual_warmup_epochs": 12,
            "generation_schedule": true,
            "generation_start": 0.0,
            "generation_end": 0.01,
            "generation_warmup_epochs": 15,
            "mse_priority_phase": true,
            "mse_priority_epochs": 8,
            "mse_priority_multiplier": 2.0
        },
        
        "standard_training": {
            "_description": "Standard training - 50 epochs, balanced settings",
            "_use_case": "Normal training, good results",
            "max_epoch": 50,
            "batch_size": 128,
            "lr": 0.0001,
            "beta_schedule": true,
            "beta_start": 0.0,
            "beta_end": 0.3,
            "perceptual_schedule": true,
            "perceptual_start": 0.0,
            "perceptual_end": 0.02,
            "perceptual_warmup_epochs": 45,
            "generation_schedule": true,
            "generation_start": 0.0,
            "generation_end": 0.001,
            "generation_warmup_epochs": 50,
            "adaptive_kl_control": true,
            "kl_target_min": 0.03,
            "kl_target_max": 0.08,
            "kl_adjustment_rate": 0.1,
            "kl_initial_beta": 0.0001,
            "kl_delay_epochs": 15,
            "kl_cycle_enabled": true,
            "kl_cycle_period": 8,
            "kl_cooldown_epochs": 2,
            "kl_cooldown_reduction": 0.25,
            "kl_beta_floor": 0.00005,
            "kl_floor_growth": 1.02,
            "adaptive_mse_l1_control": true,
            "mse_target_min": 0.30,
            "mse_target_max": 0.50,
            "l1_target_min": 0.20,
            "l1_target_max": 0.40,
            "mse_l1_adjustment_rate": 0.05,
            "stuck_detection": true,
            "stuck_patience": 5,
            "acceleration_factor": 2.0,
            "lr_on_acceleration": true,
            "lr_accel_factor": 0.5,
            "lr_min": 1e-6,
            "eval_mse": 1.0,
            "eval_l1": 0.2,
            "eval_perceptual": 0.01,
            "eval_generation": 0.001,
            "eval_beta": 0.0
        },
        
        "extended_training": {
            "_description": "Extended training - 100 epochs, careful settings",
            "_use_case": "Best quality, research, production",
            "max_epoch": 100,
            "batch_size": 128,
            "lr": 0.0001,
            "beta_schedule": true,
            "beta_start": 0.1,
            "beta_end": 2.0,
            "perceptual_schedule": true,
            "perceptual_start": 0.0,
            "perceptual_end": 0.3,
            "perceptual_warmup_epochs": 30
        },
        
        "ultra_high_quality_training": {
            "_description": "Ultra high quality training - 200 epochs, small batch, low LR",
            "_use_case": "Best possible quality, research, production",
            "max_epoch": 200,
            "batch_size": 64,
            "lr": 0.00005,
            "beta_schedule": true,
            "beta_start": 0.0,
            "beta_end": 2.0,
            "perceptual_schedule": true,
            "perceptual_start": 0.0,
            "perceptual_end": 0.6,
            "perceptual_warmup_epochs": 40
        },
        
        "fast_high_quality_training": {
            "_description": "Fast high quality training - 100 epochs, optimized batch size, moderate LR",
            "_use_case": "High quality with optimal training speed on RTX 3090",
            "max_epoch": 100,
            "batch_size": 256,
            "lr": 0.00025,
            "beta_schedule": true,
            "beta_start": 0.0,
            "beta_end": 2.0,
            "perceptual_schedule": true,
            "perceptual_start": 0.0,
            "perceptual_end": 0.6,
            "perceptual_warmup_epochs": 25
        },
        
        "beta_scheduled_training": {
            "_description": "Beta-scheduled training - starts with very low beta, gradually increases",
            "_use_case": "Prevents KL dominance, better reconstruction learning",
            "max_epoch": 100,
            "batch_size": 128,
            "lr": 0.0001,
            "beta_schedule": true,
            "beta_start": 0.0001,
            "beta_end": 2.0,
            "perceptual_schedule": true,
            "perceptual_start": 0.0,
            "perceptual_end": 0.6,
            "perceptual_warmup_epochs": 25
        },
        
        "balanced_high_quality_training": {
            "_description": "Balanced high quality training - 150 epochs, balanced settings",
            "_use_case": "Good quality-speed balance",
            "max_epoch": 150,
            "batch_size": 96,
            "lr": 0.000075,
            "beta_schedule": true,
            "beta_start": 0.0,
            "beta_end": 1.5,
            "perceptual_schedule": true,
            "perceptual_start": 0.0,
            "perceptual_end": 0.6,
            "perceptual_warmup_epochs": 30
        },
        
        "compact_high_quality_training": {
            "_description": "Compact high quality training - 80 epochs, large batch, higher LR",
            "_use_case": "Fast training with good quality",
            "max_epoch": 80,
            "batch_size": 256,
            "lr": 0.0002,
            "beta_schedule": true,
            "beta_start": 0.0,
            "beta_end": 1.5,
            "perceptual_schedule": true,
            "perceptual_start": 0.0,
            "perceptual_end": 0.6,
            "perceptual_warmup_epochs": 20
        },
        
        "full_retrain_training": {
            "_description": "Full retrain training - 150 epochs, balanced settings for fresh start",
            "_use_case": "Complete retraining from scratch with optimal parameters",
            "max_epoch": 150,
            "batch_size": 128,
            "lr": 0.0001,
            "beta_schedule": true,
            "beta_start": 0.0,
            "beta_end": 1.5,
            "perceptual_schedule": true,
            "perceptual_start": 0.0,
            "perceptual_end": 0.6,
            "perceptual_warmup_epochs": 30
        },
        
        "scheduled_training": {
            "_description": "Scheduled training with both beta and perceptual loss warmup",
            "_use_case": "Optimal training with controlled loss introduction",
            "max_epoch": 120,
            "batch_size": 128,
            "lr": 0.0001,
            "beta_schedule": true,
            "beta_start": 0.1,
            "beta_end": 1.5,
            "perceptual_schedule": true,
            "perceptual_start": 0.0,
            "perceptual_end": 0.6,
            "perceptual_warmup_epochs": 30
        }
    },
    
    "model_presets": {
        "_comment": "Different model architectures for various needs",
        
        "small": {
            "_description": "Small model - fast inference, less memory",
            "_use_case": "Mobile, embedded, quick inference",
            "embedding_size": 256,
            "num_channels": 64,
            "input_img_size": 64
        },
        
        "medium": {
            "_description": "Medium model - balanced performance",
            "_use_case": "General use, good quality",
            "embedding_size": 512,
            "num_channels": 128,
            "input_img_size": 64
        },
        
        "large": {
            "_description": "Large model - best quality, more memory",
            "_use_case": "High quality generation, research",
            "embedding_size": 1024,
            "num_channels": 256,
            "input_img_size": 64
        },
        
        "high_res": {
            "_description": "High resolution model - 128x128 images",
            "_use_case": "High resolution generation",
            "embedding_size": 512,
            "num_channels": 128,
            "input_img_size": 128
        },
        
        "ultra_high_quality": {
            "_description": "Ultra high quality model - 256x256 images, large latent space, extended training",
            "_use_case": "Best possible quality, research, production",
            "embedding_size": 1024,
            "num_channels": 256,
            "input_img_size": 256
        },
        
        "fast_high_quality": {
            "_description": "Fast high quality model - 128x128 images, balanced parameters",
            "_use_case": "High quality with reasonable training time, production use",
            "embedding_size": 512,
            "num_channels": 128,
            "input_img_size": 128
        },
        
        "balanced_high_quality": {
            "_description": "Balanced high quality model - 128x128 images, larger latent space",
            "_use_case": "Good quality-speed balance, most users",
            "embedding_size": 768,
            "num_channels": 160,
            "input_img_size": 128
        },
        
        "compact_high_quality": {
            "_description": "Compact high quality model - 64x64 images, large latent space",
            "_use_case": "Fast training, good quality, limited resources",
            "embedding_size": 1024,
            "num_channels": 192,
            "input_img_size": 64
        }
    },
    
    "dataset_presets": {
        "_comment": "Different dataset sizes for various development and testing needs",
        
        "tiny": {
            "_description": "Tiny dataset - 1000 samples for quick testing",
            "_use_case": "Debugging, architecture testing, very fast iteration",
            "dataset_subset": 1000
        },
        
        "small": {
            "_description": "Small dataset - 10000 samples for development",
            "_use_case": "Development, quick experiments, limited resources",
            "dataset_subset": 10000
        },
        
        "medium": {
            "_description": "Medium dataset - 50000 samples for balanced testing",
            "_use_case": "Balanced testing, moderate quality validation",
            "dataset_subset": 50000
        },
        
        "large": {
            "_description": "Large dataset - 100000 samples for good quality",
            "_use_case": "Good quality training, production-like testing",
            "dataset_subset": 100000
        },
        
        "full": {
            "_description": "Full dataset - all available samples",
            "_use_case": "Production training, best possible quality",
            "dataset_subset": null
        }
    },
    
    "generation_quality_config": {
        "_comment": "Generation Quality loss component weights",
        "_description": "Controls the relative importance of edge, diversity, and contrast losses in Generation Quality",
        "edge_weight": 0.4,
        "diversity_weight": 0.3,
        "contrast_weight": 0.3
    },
    
    "loss_analysis_presets": {
        "_comment": "Loss analysis method configurations for different analysis needs",
        
        "none": {
            "_description": "No loss analysis - fastest training",
            "_use_case": "Quick testing, when analysis is not needed",
            "enabled": false
        },
        
        "basic": {
            "_description": "Basic loss analysis with standard method only",
            "_use_case": "Quick analysis for basic training monitoring",
            "enabled": true,
            "methods": ["standard"],
            "interval": 10,
            "stuck_threshold": 0.001,
            "stuck_patience": 5,
            "trend_window": 10,
            "enable_logging": false
        },
        
        "standard": {
            "_description": "Standard loss analysis with all three methods",
            "_use_case": "Comprehensive analysis for most training scenarios",
            "enabled": true,
            "methods": ["standard", "constant_weight", "pareto"],
            "interval": 5,
            "stuck_threshold": 0.001,
            "stuck_patience": 5,
            "trend_window": 10,
            "enable_logging": true,
            "log_file": "loss_analysis.json",
            "reference_weights": {
                "mse_weight": 1.0,
                "l1_weight": 0.2,
                "perceptual_weight": 0.01,
                "generation_weight": 0.001,
                "beta": 0.0
            },
            "pareto_objectives": ["mse", "l1", "perceptual", "kl"],
            "pareto_tolerance": 0.01
        },
        
        "detailed": {
            "_description": "Detailed loss analysis with enhanced monitoring",
            "_use_case": "Research, debugging, or when detailed insights are needed",
            "enabled": true,
            "methods": ["standard", "constant_weight", "pareto"],
            "interval": 3,
            "stuck_threshold": 0.0005,
            "stuck_patience": 3,
            "trend_window": 15,
            "enable_logging": true,
            "log_file": "detailed_loss_analysis.json",
            "save_plots": true,
            "plot_dir": "loss_analysis_plots",
            "reference_weights": {
                "mse_weight": 1.0,
                "l1_weight": 0.2,
                "perceptual_weight": 0.01,
                "generation_weight": 0.001,
                "beta": 0.0
            },
            "pareto_objectives": ["mse", "l1", "perceptual", "generation_quality", "kl"],
            "pareto_weights": {
                "mse": 1.0,
                "l1": 0.8,
                "perceptual": 1.2,
                "generation_quality": 0.5,
                "kl": 1.0
            },
            "pareto_tolerance": 0.005
        },
        
        "research": {
            "_description": "Research-grade loss analysis with maximum detail",
            "_use_case": "Academic research, publication, or maximum insight needs",
            "enabled": true,
            "methods": ["standard", "constant_weight", "pareto"],
            "interval": 1,
            "stuck_threshold": 0.0001,
            "stuck_patience": 2,
            "trend_window": 20,
            "enable_logging": true,
            "log_file": "research_loss_analysis.json",
            "save_plots": true,
            "plot_dir": "research_analysis_plots",
            "reference_weights": {
                "mse_weight": 1.0,
                "l1_weight": 0.2,
                "perceptual_weight": 0.01,
                "generation_weight": 0.001,
                "beta": 0.0
            },
            "pareto_objectives": ["mse", "l1", "perceptual", "generation_quality", "kl"],
            "pareto_weights": {
                "mse": 1.0,
                "l1": 0.8,
                "perceptual": 1.2,
                "generation_quality": 0.5,
                "kl": 1.0
            },
            "pareto_tolerance": 0.001
        }
    }
}
